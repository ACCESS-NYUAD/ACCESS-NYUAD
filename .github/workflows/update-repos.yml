name: Update Org Repo List
on:
  schedule:
    - cron: '0 * * * *'       # hourly (UTC)
  workflow_dispatch:         # manual trigger
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch mubadala-access repos
        id: repos
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repos = await github.paginate(
              github.rest.repos.listForOrg,
              { org: 'mubadala-access', per_page: 100 }
            );
            const list = repos
              .map(r => `- [${r.name}](${r.html_url})`)
              .join('\n');
            return list;
      
      - name: Inject list into README
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const list = `## All Repositories in mubadala-access\n\n${{ steps.repos.outputs.result }}`;
            const path  = 'README.md';
            const content = (
              await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path
              })
            ).data;
            const sha = content.sha;
            const old = Buffer.from(content.content, 'base64').toString();
            const updated = old.replace(
              /<!-- START_ORG_REPOS -->[\s\S]*?<!-- END_ORG_REPOS -->/,
              `<!-- START_ORG_REPOS -->\n${list}\n<!-- END_ORG_REPOS -->`
            );
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path,
              message: 'chore: update org repo list',
              content: Buffer.from(updated).toString('base64'),
              sha
            });
